@using Microsoft.AspNetCore.Identity
@using BlogManagementApp.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - BlogApp</title>

    <!-- CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
</head>

<body>
    <!-- Navbar -->
    @await Html.PartialAsync("_Navbar")

    <!-- Main Content -->
    <main class="container mt-4">
        @RenderBody()
    </main>

    <!-- Footer -->
    @await Html.PartialAsync("_Footer")

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    @RenderSection("Scripts", required: false)

    <!-- SweetAlert Toast -->
    <script>
        @if (TempData["Success"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Başarılı',
                        text: '@TempData["Success"]',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    });
            </text>
        }

        @if (TempData["Error"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata',
                        text: '@TempData["Error"]',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    });
            </text>
        }
    </script>

    <script>
        const themeToggle = document.getElementById("themeToggle");
        if (themeToggle) {
            themeToggle.addEventListener("click", () => {
                document.body.classList.toggle("dark-mode");
                localStorage.setItem("theme", document.body.classList.contains("dark-mode") ? "dark" : "light");
            });

            // Sayfa yüklenince mevcut temayı yükle
            if (localStorage.getItem("theme") === "dark") {
                document.body.classList.add("dark-mode");
            }
        }
    </script>

</body>
</html>
